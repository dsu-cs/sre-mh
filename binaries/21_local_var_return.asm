; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\user\Desktop\binaries\21_local_var_return.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2481	DB	'sum=%d, product=%d', 0aH, 00H
_DATA	ENDS
PUBLIC	_f1
; Function compile flags: /Odtp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_sum$ = 16						; size = 4
_product$ = 20						; size = 4
_f1	PROC
; File c:\users\user\desktop\binaries\21_local_var_return.c
; Line 6
	push	ebp
	mov	ebp, esp
; Line 7
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _sum$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 8
	mov	edx, DWORD PTR _x$[ebp]
	imul	edx, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _product$[ebp]
	mov	DWORD PTR [eax], edx
; Line 9
	pop	ebp
	ret	0
_f1	ENDP
_TEXT	ENDS
PUBLIC	_main
EXTRN	__imp__printf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_product$ = -4						; size = 4
_main	PROC
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 14
	lea	eax, DWORD PTR _product$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sum$[ebp]
	push	ecx
	push	456					; 000001c8H
	push	123					; 0000007bH
	call	_f1
	add	esp, 16					; 00000010H
; Line 15
	mov	edx, DWORD PTR _product$[ebp]
	push	edx
	mov	eax, DWORD PTR _sum$[ebp]
	push	eax
	push	OFFSET $SG2481
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
; Line 16
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
